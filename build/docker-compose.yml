name: stori

services:
  main:
    build:
      context: ..
      dockerfile: ./build/Dockerfile
      target: runner
    environment:
      EMAIL_HOST: "${EMAIL_HOST}"
      EMAIL_PORT: "${EMAIL_PORT}"
      EMAIL_USERNAME: "${EMAIL_USERNAME}"
      EMAIL_PASSWORD: "${EMAIL_PASSWORD}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASS}"
      DB_NAME: "${DB_NAME}"
      DB_HOST: "${DB_HOST}"
    command: [ "-filepath", "${FILEPATH}", "-email", "${EMAIL}" ]
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASS}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
volumes:
  pgdata: